"Misc
"""""""""""""""
" I carnt spelll
set spell

" Remove commenting on next line
autocmd FileType * setlocal formatoptions-=c formatoptions-=r formatoptions-=o

" Filetype / Omnicomplete
"""""""""""""""
autocmd BufNewFile,BufRead jquery.*.js set ft=javascript syntax=jquery
autocmd BufNewFile,BufRead *.scss set ft=scss syntax=scss
autocmd BufNewFile,BufRead *.erb set filetype=html " Set ERB filetype to HTML
autocmd BufNewFile,BufRead *.hbs set filetype=html " Set ERB filetype to HTML

autocmd FileType html,markdown,erb,hbs setlocal omnifunc=htmlcomplete#CompleteTags
autocmd FileType javascript setlocal omnifunc=javascriptcomplete#CompleteJS
autocmd FileType css,sass,scss setlocal omnifunc=csscomplete#CompleteCSS
autocmd FileType ruby setlocal omnifunc=rubycomplete#Complete

" Looks
"""""""""""""""
set t_Co=256
set background=dark
set linespace=8
let base16colorspace=256

if has('gui_running')
  :colorscheme base16-ocean
  set guifont=Anonymous\ Pro:h18
  set guioptions-=T
  set guioptions-=m
  set guioptions-=l
  set guioptions-=r
  set guioptions-=R
  set guioptions-=L
  set guioptions+=c
endif

" Search
set hlsearch          " Highlight search terms
set incsearch         " search dynamically as keyword is typed.
set ignorecase
set smartcase

" Mappings
"""""""""""""""
" Faster new buffers
map <leader>e :e <C-R>=expand("%:p:h") . "/" <CR>
map <leader>s :split <CR> :CtrlP <CR>
map <leader>S :split <C-R>=expand("%:p:h") . "/" <CR>
map <leader>v :vsplit <CR> :CtrlP <CR>
map <leader>V :vsplit <C-R>=expand("%:p:h") . "/" <CR>

" Go back to normal mode with jk OR kj OR jj OR kk
imap jk <Esc>j
imap kj <Esc>k
imap jj <Esc>j
imap kk <Esc>k

" Saves time
nmap <return> :

" NERDTree
nmap <leader>n :NERDTreeToggle<cr>

" CtrlP
map <leader>g :CtrlP <CR>
let g:ctrlp_map = '<c-p>'

" Ag
map <leader>a :Ag 

" Delete Current file
map <leader>dd :call delete(expand('%'))<CR>

" Sorting
vmap <leader>1 :!sort<CR>
map <leader>2 ?{<CR>jV/^\s*\}\=$<CR>k:sort<CR>:let @/=''<CR>

" Set ultisnips triggers
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<s-tab>"

" Emmet Expand
let g:user_emmet_expandabbr_key = '<c-e>'

" Rename
map <Leader>r :RenameFile<CR>

" Save
map <Leader>w :w<CR>

" Save and Quit
map <Leader>x :x<CR>

" Quit
map <Leader>q :q<CR>

map <leader>f :%s/

" always indent after pasting
noremap p p=']

" To open a new empty buffer
" This replaces :tabnew which I used to bind to this mapping
" nmap <leader>T :enew<cr>

" Move to the next buffer
nmap <leader>bn :bnext<CR>

" Move to the previous buffer
nmap <leader>bp :bprevious<CR>

" Close the current buffer and move to the previous one
" This replicates the idea of closing a tab
nmap <leader>bq :bp <BAR> bd #<CR>
" Show all open buffers and their status nmap <leader>bl :ls<CR>

" resize current buffer by +/- 5 
nnoremap <C-left> :vertical resize -5<cr>
nnoremap <C-down> :resize +5<cr>
nnoremap <C-up> :resize -5<cr>
nnoremap <C-right> :vertical resize +5<cr>
